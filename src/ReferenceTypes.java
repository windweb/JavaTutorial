/*
Ссылочные типы (Reference Types)

Ссылочные типы в Java включают в себя классы, интерфейсы и массивы.
Они хранят ссылки на объекты, а не сами объекты.
Важно понимать, что при работе со ссылочными типами, вы работаете с адресом объекта в памяти,
а не непосредственно с самим объектом.

    Классы: Как пользовательские (например, класс, который вы создаете), так и встроенные
    (например, String, Integer и другие классы-обертки).

    Интерфейсы: Определяют набор методов, которые могут быть реализованы классами.

    Массивы: Коллекция данных одного типа, хранящаяся в непрерывной последовательности в памяти.

Ссылочные типы позволяют создавать сложные структуры данных и работать с объектами. Они обладают такими возможностями, как наследование, полиморфизм и инкапсуляция.
*/

import java.awt.*;
import java.util.Arrays;
import java.util.Date;

public class ReferenceTypes {
    public static void main (String[] args) {
        byte age = 30;
        Date now = new Date();
        System.out.println(now);
//        sout
//        System.out.println();
//        System.out.println("ReferenceTypes.main");
//        System.out.println("args = " + Arrays.toString(args));
//        System.out.println("now = " + now);
        Point point1 = new Point(1, 1);
        Point point2 = point1;
        point1.x = 2;
        System.out.println(point2);
    }
}
/*
Основные Отличия

    Хранение в памяти: Примитивные типы хранятся на стеке,
    в то время как ссылочные типы хранятся на куче,
    а на стеке хранится только ссылка на объект.

    По умолчанию: Примитивные типы имеют стандартные значения по умолчанию
    (например, 0 для числовых типов, false для boolean),
    в то время как для ссылочных типов значение по умолчанию – null.

    Производительность: Обращение к примитивным типам обычно быстрее,
    чем к ссылочным из-за прямого доступа к памяти.

Оба типа являются важными компонентами языка программирования Java, и выбор между ними зависит от конкретных требований и сценариев использования.
*/